plugins {
    id 'java-library'
    id 'maven-publish'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

group = 'com.github.figaf'
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

ext {
    lombokVersion = '1.18.8'
    integrationCommonsVersion = '1.24'
    slf4jApiVersion = '1.7.25'
    httpmimeVersion = '4.5.3'
    gsonVersion = '2.10'
    integrationCommonsTestVersion = '1.4'
    assertjCoreVersion = '3.18.0'
    mockitoCoreVersion = '3.6.0'
    mockitoJunitJupiterVersion = '3.6.0'
    logbackClassicVersion = '1.2.3'
    junitJupiterEngineVersion = '5.7.0'
}

dependencies {

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    api "com.github.figaf:integration-commons:${integrationCommonsVersion}"
    api ('org.slf4j:slf4j-api') {
        version {
            strictly "${slf4jApiVersion}"
        }
    }

    testImplementation "com.github.figaf:integration-commons-test:${integrationCommonsTestVersion}"
    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterEngineVersion}"
    testImplementation "ch.qos.logback:logback-classic:${logbackClassicVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterEngineVersion}"
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

test {
    useJUnitPlatform()

    project.properties.each {propertyName, propertyValue ->
        if (!propertyName.startsWith("agent-test-data")) return

        systemProperty propertyName, propertyValue
    }

    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }

    maxHeapSize = "2G"
}